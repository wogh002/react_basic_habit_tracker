{"version":3,"sources":["components/simpleHabit.jsx","index.js"],"names":["SimpleHabit","props","useState","count","setCount","spanRef","useRef","handleIncrement","useCallback","useEffect","console","log","className","ref","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA+BeA,EA7BK,SAAAC,GAAS,MAKDC,mBAAS,GALR,mBAKpBC,EALoB,KAKbC,EALa,KAMrBC,EAAUC,mBAEVC,EAAkBC,uBAAY,WAClCJ,EAASD,EAAQ,MAMnB,OAJAM,qBAAU,WACRC,QAAQC,IAAR,wBACC,IAGD,qBAAIC,UAAU,QAAd,UACE,sBAAMC,IAAKR,EAASO,UAAU,aAA9B,qBACA,sBAAMA,UAAU,cAAhB,SAA+BT,IAC/B,wBACES,UAAU,8BACVE,QAASP,EAFX,SAIE,mBAAGK,UAAU,6B,MClBrBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a07bd876.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nconst SimpleHabit = props => {\n  //function 컴포넌트는 props,state 가 변경이 되면 함수전체가 반복이된다.\n  // state = {\n  //   count: 0,\n  // };\n  const [count, setCount] = useState(0);\n  const spanRef = useRef();\n\n  const handleIncrement = useCallback(() => {\n    setCount(count + 1);\n  });\n  useEffect(() => {\n    console.log(`simpleHait.jsxxxxx`);\n  }, []);\n\n  return (\n    <li className=\"habit\">\n      <span ref={spanRef} className=\"habit-name\">Reading</span>\n      <span className=\"habit-count\">{count}</span>\n      <button\n        className=\"habit-button habit-increase\"\n        onClick={handleIncrement}\n      >\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n    </li>\n  );\n}\n\nexport default SimpleHabit;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SimpleHabit from './components/simpleHabit';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n// 컴포넌트를 html과 연결해주는 작업 ReactDOM\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}